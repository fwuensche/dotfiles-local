set -sg escape-time 0

set-option -g default-command "reattach-to-user-namespace -l zsh"
# Easy reloading of the tmux.conf configuration file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Seamless aviation using vim-tmux-navigator (github christoomey/vim-tmux-navigator)
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Restore clear screen keybind mapped over by tmux-navigator
bind C-l send-keys C-l

set -g status-left  " #[fg=white,bold]#S "

# Use emacs / readline key-bindings in the tmux command prompt
set-option -g status-keys "emacs"

# Allow the session name in status left to display up to 50 characters
set-option -g status-left-length 50

set -g status-bg '#292c33'
set -g status-fg '#95a2bb'

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# More intuitive pane splitting key-bindings, open all in current path
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \ split-window -h  -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

# break a pane into a new window
bind-key b break-pane -d

# jump to another session
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# run tat from current folder and enter that session
bind-key C-b send-keys 'tat && exit' 'C-m'

# Local config
if-shell "[ -f ~/.tmux.conf.local.snapshot ]" 'source ~/.tmux.conf.local.snapshot'

# default statusbar colors
# set-option -g status-bg black #base02
# set-option -g status-fg yellow #yellow
# set-option -g status-attr default

# default window title colors
# set-window-option -g window-status-fg brightblue #base0
# set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
# set-window-option -g window-status-current-fg brightred #orange
# set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
# set-option -g pane-border-fg black #base02
# set-option -g pane-active-border-fg brightgreen #base01

# message text
# set-option -g message-bg black #base02
# set-option -g message-fg brightred #orange
#
# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

# bell
set-window-option -g window-status-bell-style fg=black,bg=red #base02, red

## set status bar
set -g status-bg "#373b41"
set -g status-fg "#c5c8c6"

## highlight active window
setw -g window-status-current-bg "#282a2e"
setw -g window-status-current-fg "#81a2be"

## highlight activity in status bar
setw -g window-status-activity-fg "#8abeb7"
setw -g window-status-activity-bg "#1d1f21"

## pane border and colors
set -g pane-active-border-bg default
set -g pane-active-border-fg "#373b41"
set -g pane-border-bg default
set -g pane-border-fg "#373b41"

set -g clock-mode-colour "#81a2be"
set -g clock-mode-style 24

set -g message-bg "#8abeb7"
set -g message-fg "#000000"

set -g message-command-bg "#8abeb7"
set -g message-command-fg "#000000"

set -g mode-bg "#8abeb7"
set -g mode-fg "#000000"
